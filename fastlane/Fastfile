default_platform(:ios)

BUNDLE_ID = ENV["BUNDLE_ID"]
DEVELOPER_APP_ID = ENV["DEVELOPER_APP_ID"]
DEVELOPER_APP_IDENTIFIER = ENV["DEVELOPER_APP_IDENTIFIER"]
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]
TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]
APPLE_ISSUER_ID = ENV["APPLE_ISSUER_ID"]
APPLE_KEY_ID = ENV["APPLE_KEY_ID"]
APPLE_KEY_CONTENT = ENV["APPLE_KEY_CONTENT"]
GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]
GIT_USERNAME = ENV["GIT_USERNAME"]
GIT_EMAIL = ENV["GIT_EMAIL"]

def delete_temp_keychain()
  delete_keychain(
    name: TEMP_KEYCHAIN_USER
  ) if File.exist? File.expand_path("~/Library/Keychains/#{TEMP_KEYCHAIN_USER}-db")
end

def create_temp_keychain()
  create_keychain(
      name: TEMP_KEYCHAIN_USER,
      password: TEMP_KEYCHAIN_PASSWORD,
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
  )
end

def ensure_temp_keychain()
  delete_temp_keychain()
  create_temp_keychain()
end

def build_app_locally(increament_build_numer)
  ensure_temp_keychain()

  api_key = app_store_connect_api_key(
    key_id: APPLE_KEY_ID,
    issuer_id: APPLE_ISSUER_ID,
    key_content: APPLE_KEY_CONTENT,            
    duration: 1200,            
    in_house: false
  )

  if increament_build_numer
    increment_build_number(xcodeproj: "NBackGame.xcodeproj")
  end

  match(
    type: "appstore",
    app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
    git_basic_authorization: Base64.strict_encode64(GIT_AUTHORIZATION),
    readonly: true,
    keychain_name: TEMP_KEYCHAIN_USER,
    keychain_password: TEMP_KEYCHAIN_PASSWORD,
    api_key: api_key
  )

  gym(
    configuration: "Release",
    project: "NBackGame.xcodeproj",
    scheme: "NBackGame",
    export_method: "app-store",
    export_options: {
      compileBitcode: true,
      provisioningProfiles: { 
          BUNDLE_ID => PROVISIONING_PROFILE_SPECIFIER
      }
    }
  )
end

def clear_data() 
  clean_build_artifacts
  delete_temp_keychain()
end

def setup_git_config()
    sh("git config --global user.name " + GIT_USERNAME)
    sh("git config --global user.email " + GIT_EMAIL)
    sh("git config pull.rebase true")
end

platform :ios do

  lane :deploy_to_appstore do
    ensure_temp_keychain()

    version = get_version_number()
    increment_version_number(version_number: version)
    increment_version_number(bump_type: "major")
    increment_build_number(build_number: 1)

    build_app_locally(false)

    deliver(
      submit_for_review: true,
      automatic_release: true,
      overwrite_screenshots: false, ## it was true
      force: true,
      submission_information: {
        export_compliance_uses_encryption: false,
        add_id_info_uses_idfa: false
      },
      precheck_include_in_app_purchases: false
    )
     
    clear_data()
  end

  lane :update_bump_main_version do
    setup_git_config()

    sh("git fetch --all")

    sh("git checkout main")

    old_build_number = get_build_number(xcodeproj: "NBackGame.xcodeproj")

    increment_build_number(xcodeproj: "NBackGame.xcodeproj")
      
    build_number = get_build_number(xcodeproj: "NBackGame.xcodeproj")

    sh("git commit -am \"Bump version from: " + old_build_number + " to: " + build_number + "\"")

    sh("git push")

  end
  
  lane :update_bump_stable_version do
    setup_git_config()

    sh("git fetch --all")

    sh("git checkout stable")

    old_build_number = get_build_number(xcodeproj: "NBackGame.xcodeproj")

    increment_build_number(xcodeproj: "NBackGame.xcodeproj")
      
    build_number = get_build_number(xcodeproj: "NBackGame.xcodeproj")

    sh("git commit -am \"Bump version from: " + old_build_number + " to: " + build_number + "\"")

    sh("git push")
  end

  lane :push_new_stable_to_dev do
    setup_git_config()

    sh("git push --force origin stable:dev")
  end

  lane :push_new_main_to_stable do
    setup_git_config()

    sh("git push --force origin main:stable")
  end

  lane :deploy_to_testflight do
    # build_app_locally(true)

    # pilot(
    #   apple_id: "#{DEVELOPER_APP_ID}",
    #   app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
    #   skip_waiting_for_build_processing: false,
    #   skip_submission: false,
    #   distribute_external: true,
    #   groups: "Testers",
    #   changelog: "Test changelong",
    #   notify_external_testers: true,
    #   ipa: "./NBackGame.ipa"
    # )

    clear_data()
  end
end
