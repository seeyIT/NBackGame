default_platform(:ios)

BUNDLE_ID = ENV["BUNDLE_ID"]
DEVELOPER_APP_ID = ENV["DEVELOPER_APP_ID"]
DEVELOPER_APP_IDENTIFIER = ENV["DEVELOPER_APP_IDENTIFIER"]
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]
TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]
APPLE_ISSUER_ID = ENV["APPLE_ISSUER_ID"]
APPLE_KEY_ID = ENV["APPLE_KEY_ID"]
APPLE_KEY_CONTENT = ENV["APPLE_KEY_CONTENT"]
GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]
GIT_USERNAME = ENV["GIT_USERNAME"]
GIT_EMAIL = ENV["GIT_EMAIL"]
PR_BODY = ENV["PR_BODY"]
COMMIT_MESSAGE = ENV["COMMIT_MESSAGE"]
GENERIC_MESSAGE = "Updated the app to make features load faster and fix some crashes."

def delete_temp_keychain()
  delete_keychain(
    name: TEMP_KEYCHAIN_USER
  ) if File.exist? File.expand_path("~/Library/Keychains/#{TEMP_KEYCHAIN_USER}-db")
end

def create_temp_keychain()
  create_keychain(
      name: TEMP_KEYCHAIN_USER,
      password: TEMP_KEYCHAIN_PASSWORD,
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
  )
end

def ensure_temp_keychain()
  clean_build_artifacts
  delete_temp_keychain()
  create_temp_keychain()
end

def build_app_locally()
  ensure_temp_keychain()

  api_key = app_store_connect_api_key(
    key_id: APPLE_KEY_ID,
    issuer_id: APPLE_ISSUER_ID,
    key_content: APPLE_KEY_CONTENT,            
    duration: 1200,            
    in_house: false
  )

  match(
    type: "appstore",
    app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
    git_basic_authorization: Base64.strict_encode64(GIT_AUTHORIZATION),
    readonly: true,
    keychain_name: TEMP_KEYCHAIN_USER,
    keychain_password: TEMP_KEYCHAIN_PASSWORD,
    api_key: api_key
  )

  gym(
    configuration: "Release",
    project: "NBackGame.xcodeproj",
    scheme: "NBackGame",
    export_method: "app-store",
    export_options: {
      compileBitcode: true,
      provisioningProfiles: { 
          BUNDLE_ID => PROVISIONING_PROFILE_SPECIFIER
      }
    }
  )
end

def clear_data() 
  clean_build_artifacts
  delete_temp_keychain()
end

def setup_git_config()
    sh("git config --global user.name " + GIT_USERNAME)
    sh("git config --global user.email " + GIT_EMAIL)
    sh("git config pull.rebase true")
end

platform :ios do

  lane :deploy_to_appstore do
    ensure_temp_keychain()

    increment_build_number(xcodeproj: "NBackGame.xcodeproj")

    build_app_locally()

   # capture_ios_screenshots

    deliver(
      submit_for_review: true,
      automatic_release: true,
      overwrite_screenshots: false,
      force: true,
      release_notes: {
        'default' => PR_BODY,
        'zh-Hans' => '更新了应用程序，使功能加载更快，并修复了一些崩溃问题。',
        'de-DE' => 'Die App wurde aktualisiert, damit die Funktionen schneller laden und einige Abstürze behoben werden.',
        'ko' => '기능 로딩 속도를 높이고 일부 충돌을 수정하기 위해 앱을 업데이트했습니다.',
        'pl' => 'Zaktualizowano aplikację, aby przyspieszyć ładowanie funkcji i naprawić niektóre błędy.',
        'es-ES' => 'Se ha actualizado la aplicación para que las funciones se carguen más rápido y se han corregido algunos fallos.'
        
      },
      submission_information: {
        export_compliance_uses_encryption: false,
        add_id_info_uses_idfa: false
      },
      precheck_include_in_app_purchases: false
    )

    # increment_version_number(bump_type: "major")
    # increment_build_number(build_number: 1)

    clear_data()
  end

  lane :bump_main_version_number do
    sh "git fetch --all --unshallow"
    git_pull

    v = (get_version_number.to_i + 1).to_s + ".0"
    increment_version_number_in_xcodeproj(
      version_number: v,
      xcodeproj: "NBackGame.xcodeproj",
      target: 'NBackGame'
    )  
    increment_version_number(version_number: v)
    increment_build_number(build_number: 1)

    commit_version_bump(
      message: "Bump version number to: " + get_version_number
    )

    push_to_git_remote

  end

  lane :bump_stable_build_number do 
    sh "git fetch --all --unshallow"
    git_pull

    increment_build_number(xcodeproj: "NBackGame.xcodeproj")

    commit_version_bump(
      message: "Build version bump to: " + get_build_number,
      force:true
    )

    push_to_git_remote
  end

  lane :push_new_stable_to_dev do
    sh "git checkout dev"
    sh "git pull"
    sh "git pull --no-rebase origin stable"
    sh "git push"
  end

  lane :push_new_main_to_stable do
    sh "git checkout stable"
    sh "git pull"
    sh "git pull --no-rebase origin main"
    sh "git push"
  end

  lane :deploy_to_testflight do
    build_app_locally()

    pilot(
      apple_id: "#{DEVELOPER_APP_ID}",
      app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
      skip_waiting_for_build_processing: false,
      skip_submission: false,
      distribute_external: true,
      groups: "ExternalTesters",
      changelog: PR_BODY,
      notify_external_testers: true,
      ipa: "./NBackGame.ipa"
    )

    clear_data()
  end

  lane :create_pr_to_stable do 
    create_pull_request(
      api_token: GIT_AUTHORIZATION,
      repo: "seeyIT/NBackGame",
      title: "Dev -> Stable: " + COMMIT_MESSAGE,
      body: GENERIC_MESSAGE,
      base: "stable"
    )
  end

  lane :create_pr_to_main do 
    create_pull_request(
      api_token: GIT_AUTHORIZATION,
      repo: "seeyIT/NBackGame",
      title: "Stable -> Main: " + COMMIT_MESSAGE,
      body: GENERIC_MESSAGE,
      base: "main"
    )
  end
end



